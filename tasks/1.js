/* Задача 1
Задача о палиндроме: напишите функцию, которая проверяет, является ли заданная строка палиндромом. Палиндром — это строка, которая читается одинаково в обоих направлениях (например, «аргентина манит негра »).
 */

/* РЕШЕНИЕ
 - проверим,  что аргумент функции строка и она не пустая
 - перeведем строку в нижний регистр
 - уберем пробелы с обеих сторон
 - вырежем все символы, кроме букв и цифр  с помощью регулярного выражения
 - переведем строку в массив, потом в обратный порядок и соберем снова в строку
 - сравним с оригиналом
 - если это палиндром то вернется ответ - 'строка - палиндром' написанный с помощью шаблонных строк
 */

const checkPalindrom = (randomString) => {
  if (typeof randomString === 'string' && randomString !== ' ') {
    const cleanString = randomString
      .toLowerCase()
      .trim()
      .replace(/[^a-zA-Zа-яА-Я]+/g, '');
    const reversedString = [...cleanString].reverse().join('');
    return reversedString === cleanString
      ? `строка "${randomString}" - палиндром`
      : `строка "${randomString}" - не палиндром`;
  } else {
    return 'аргумент функции не является строкой или это пустая строка';
  }
};

// console.log(checkPalindrom('аргентина манит негр')); //строка "аргентина манит негра" - палиндром

//  2 вариант

/* РЕШЕНИЕ
 - проверим,  что аргумент функции строка и она не пустая
 - перeведем строку в нижний регистр, уберем пробелы с обеих сторон и вырежем из строки все символы, кроме букв и цифр  с помощью регулярного выражения
 - из этой строки получим массив
 - создадим пустой массив для обратной строки
 - пройдемся по массиву из строки и будем помещать буквы с начала в новый массив, тем самым получим обратный массив
 - соберем его в строку
 - сравним с оригинальной чистой строкой
 - если это палиндром то вернется ответ - true
 */
function isPalindrome(randomString) {
  if (typeof randomString === 'string' && randomString !== ' ') {
    const cleanString = randomString
      .toLowerCase()
      .trim()
      .replace(/[^a-zA-Zа-яА-Я]+/g, '');
    const stringArray = [...cleanString];
    const newArray = [];
    stringArray.forEach((index) => {
      newArray.unshift(index);
    });
    const reversedString = newArray.join('');
    return cleanString === reversedString;
  } else {
    return 'аргумент функции не является строкой или это пустая строка';
  }
}

isPalindrome('аргентина манит негра'); //true

//3 вариант

/* РЕШЕНИЕ
 - проверим,  что аргумент функции строка и она не пустая
 - перeведем строку в нижний регистр, уберем пробелы с обеих сторон и вырежем из строки все символы, кроме букв и цифр  с помощью регулярного выражения
 - создадим переменную count, которая будет хранить число количества символов половины строки
 - проверим четная или нечетная длина строки
 - если длина строки четная, то count равна длине половине строки
 - если длина строки нечетная, то проверяем дальше
 - и eсли длина строки равна 1, она становится палиндромом - вернется true
 - eсли длина строки длиньше 1, то мы вычтем один средний символ и получим длину по которой пройдемся циклом и сравним буквы в начале и в конце
 - метод .slice(-1 - i)[0] - будет возвращать по одной букве с конца
 - если хотя бы одна не совпадает то это не палиндром - вернет false
 - иначе вернется true
 */

function isPalindromeTwo(randomString) {
  if (typeof randomString === 'string' && randomString !== ' ') {
    const cleanString = randomString
      .toLowerCase()
      .trim()
      .replace(/[^a-zA-Zа-яА-Я]+/g, '');
    let count = 0;
    if (cleanString.length % 2 === 0) {
      count = cleanString.length / 2;
    } else {
      if (cleanString.length === 1) {
        return true;
      } else {
        count = (cleanString.length - 1) / 2;
      }
    }
    for (let i = 0; i < count; i++) {
      if (cleanString[i] != cleanString.slice(-1 - i)[0]) {
        return false;
      }
    }
    return true;
  } else {
    return 'аргумент функции не является строкой или это пустая строка';
  }
}
isPalindromeTwo('шалаш');
