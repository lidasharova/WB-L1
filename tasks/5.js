/* Задача 5
Разработайте функцию преобразования JSON в связный список. На входе функция должна получать JSON, содержащий список объектов, на выходе объект, представляющий из себя односвязный список.


JSON (JavaScript Object Notation) - это формат данных, который используется для обмена данными между различными приложениями. JSON-строка может представлять данные в виде объектов и массивов.

РЕШЕНИЕ
1) Сначала создадим класс ListNode, который будет создавать узел связанного списка.
У каждого узла будет два свойства:
val - чтобы хранить значение,
next - чтобы указывать на следующий узел в списке.

2)Входной JSON должен быть разобран в JavaScript-объект.
Для этого используем функцию JSON.parse.

3)Теперь создадим связанный список, используя значения из полученного обьекта JS.
пройдем по обьекту JSON и для каждого элемента создадим новый узел и свяжем его с предыдущим узлом
(или с головой, если это первый элемент).

4)все решение поместим в блок try и catch что бы отловить ошибку при передаче не валидной JSON строки
*/

class ListNode {
  constructor(val) {
    this.val = val;
    this.next = null;
  }
}

const myFunc = (jsonStr) => {
  try {
    // Разбор JSON-строки в JavaScript-массив
    const data = JSON.parse(jsonStr);

    // Создание фиктивной головы и указателя текущего узла
    const head = new ListNode(data[0]);
    let current = head;

    // Создание связанного списка из данных JSON
    for (const key in data) {
      current.next = new ListNode(data[key]);
      current = current.next;
    }
    // Возвращение связанного списка, начиная с первого элемента
    return head;
  } catch {
    return 'это не валидная JSON-строка';
  }
};

console.log(myFunc('{"name": "John", "age": 30, "city": "New York"}'));
