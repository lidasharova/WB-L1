/* Задача 6
Задача о сортировке объектов: у вас есть массив объектов вида { name: 'John', age: 25 }. Напишите код, который сортирует этот массив по возрастанию возраста, а при равных возрастах сортирует по алфавиту по полю name.


 РЕШЕНИЕ
 у нас есть массив с объектами, которые содержат несколько св-в по которым мы сравним их
- используем метод sort
- если возраста сравниваемых объектов равны, то сравниваем по имени обьектов
- для этого воспользуемся методом строк localeCompare (https://learn.javascript.ru/string)
- этот метод возвращает числовое значение, которое указывает, какое из строковых значений должно быть расположено первым в отсортированном массиве, на основе локальных правил сравнения.
string1.localeCompare(string2);
этот метод возвращает целое число, которое может принимать одно из следующих значений:
-1  - string1 меньше чем string2.
0   - string1 равно string2.
1   -  string1 больше чем string2.

- если age не равны, то сравнение идет на их разнице
вернется положительное число - a.age > b.age
вернется отрицательное число - a.age < b.age
вернется 0 - если age равны

-в результате массив arr будет отсортирован в порядке возрастания возраста,
и если возраст одинаков, то по алфавиту по имени.

*/

const arr = [
  { name: 'John', age: 25 },
  { name: 'Alice', age: 30 },
  { name: 'Bob', age: 20 },
];

arr.sort((a, b) => {
  if (a.age === b.age) {
    return a.name.localeCompare(b.name);
  }
  return a.age - b.age;
});

console.log(arr);

/* 2 вариант
JavaScript сам может выполняет лексикографическое сравнение строк, поэтому просто вернем число для метода сортировки
*/

arr.sort((a, b) => {
  if (a.age === b.age) {
    return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;
  }
  return a.age - b.age;
});

console.log(arr);
